if status is-interactive
    # Commands to run in interactive sessions can go here
end

alias ..="cd .. && pwd"
alias ls="exa -F"
alias la="exa -aF"
alias ll="exa -lF"
alias lla="exa -alF"
alias tree="exa --tree --git-ignore"
alias cat="bat -p"
alias vim=nvim
alias vs="nvim -S"
alias c=cargo
alias cz=chezmoi
alias czd="chezmoi cd"
alias cza="chezmoi -v apply"
alias cze="chezmoi edit"
alias czu="chezmoi update"
alias czr="chezmoi -v apply --refresh-externals"
alias gc="git checkout"

set -x PATH $PATH /usr/local/bin
set -x PATH $PATH ~/.local/bin
set -x PATH $PATH ~/.emacs.d/bin
set -x PATH $PATH ~/.cargo/bin
set -x PATH $PATH ~/go/bin

set -Ux RUST_BACKTRACE 1

switch (uname)
    case Linux
        alias yank="xclip -selection clipboard"
    case Darwin
        set -x PATH $PATH /opt/brew/bin
    case '*'
end

# This will run the mkdir command, and if it is successful, change the current
# working directory to the one just created.
function mkcd -d "Create a directory and set CWD"
    command mkdir $argv
    if test $status = 0
        switch $argv[(count $argv)]
            case '-*'

            case '*'
                cd $argv[(count $argv)]
                return
        end
    end
end

# Fish git prompt
set __fish_git_prompt_showuntrackedfiles 'yes'
set __fish_git_prompt_showdirtystate 'yes'
set __fish_git_prompt_showstashstate ''
set __fish_git_prompt_showupstream 'none'
set -g fish_prompt_pwd_dir_length 3

function fish_prompt
    set_color brblack
    echo -n "["(date "+%H:%M")"] "
    set_color blue
    echo -n (hostname)
    if [ $PWD != $HOME ]
        set_color brblack
        echo -n ':'
        set_color yellow
        echo -n (basename $PWD)
    end
    set_color green
    printf '%s ' (__fish_git_prompt)
    set_color red
    echo -n '| '
    set_color normal
end

function fish_greeting
    echo

    {{- if eq .chezmoi.os "darwin" }}
    echo -e (uname -rs | awk '{print " \\\\e[1mOS: \\\\e[0;32m"$0"\\\\e[0m"}')
    echo -e (uname -n | awk '{print " \\\\e[1mHostname: \\\\e[0;32m"$0"\\\\e[0m"}')
    echo -e (uptime | sed 's/^up //' | awk '{print " \\\\e[1mUptime: \\\\e[0;32m"$0"\\\\e[0m"}')
    {{- end }}

    {{- if eq .chezmoi.os "linux" }}
    echo -e (uname -ro | awk '{print " \\\\e[1mOS: \\\\e[0;32m"$0"\\\\e[0m"}')
    echo -e (uname -n | awk '{print " \\\\e[1mHostname: \\\\e[0;32m"$0"\\\\e[0m"}')
    echo -e (uptime -p | sed 's/^up //' | awk '{print " \\\\e[1mUptime: \\\\e[0;32m"$0"\\\\e[0m"}')
    {{- end }}

    echo

    # Display TODOs if FILE exists
    if test -e ~/todo
        set_color red
        echo -e " \e[1mTODOs\e[0;32m"
        set_color yellow
        cat ~/todo | sed 's/^/ /'
        echo
    end

    set_color normal
end

zoxide init fish | source

{{- if eq .prompt "starship" -}}
starship init fish | source
{{ end -}}
