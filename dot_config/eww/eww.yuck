(defwindow status-bar
  :monitor 0
  :geometry (geometry :x "0"
                      :y "0"
                      :width "100%"
                      :height "50px"
                      :anchor "top center")
  :stacking "bg"
  :exclusive false
  :focusable true
  (status-bar))

(defwidget status-bar []
  (box :class "status-bar"
    (left)
    (right)))

(defwidget left []
  (box :class "left"
       :halign "start"
       :space-evenly false
    (workspaces)
    (active-window)))

(defwidget right []
  (box :class "right"
       :halign "end"
       :space-evenly false
    (dropbox)
    (wifi)
    (bluetooth)
    (battery)
    (time)))

(defwidget workspaces []
  (box :class "workspaces"
       :space-evenly false
    (for workspace in workspaces
      (button :class {active-workspace == workspace ? "active" : "inactive"}
              :onclick "hyprctl dispatch workspace ${workspace}"
        workspace))))

(defwidget active-window []
  (box :class "active-window"
    (button :class "active-window" {active-window == "null" ? "" : active-window})))

(defwidget dropbox []
  (box :class "dropbox"
    (button :class {dropbox-status == "Dropbox isn't running!" ? "off" : "on"}
            :onclick {dropbox-status == "Dropbox isn't running!" ? "dropbox start" : ""}
      {dropbox-status == "Dropbox isn't running!" ? "Start Dropbox" : dropbox-status == "Up to date"
      ? "" : dropbox-status})))

(defwidget bluetooth []
  (box :class "bluetooth"
    (button :class {bluetooth-info == "" ? "disconnected" : "connected"}
            :tooltip {bluetooth-info == "" ? "" : "bluetooth connected to ${bluetooth-info}"}
      {bluetooth-info == "null" ? "" : bluetooth-info})))

(defwidget wifi []
  (box :class "wifi"
    (button :class {wifi-connected == "up" ? "connected" : "disconnected"}
            :tooltip {wifi-connected == "up" ? "wifi connected to ${wifi-ssid}" : ""} wifi-ssid)))

(defwidget battery []
  (box :class "battery"
    (button :class {power-status == "Charging" ? "charging" : ""}
            :tooltip "${power-status}" "${power-capacity}%")))

(defwidget time []
  (box :class "time"
    (button :class "hour" :tooltip "${time-hour}:${time-minute}:${time-second}" time-hour)
    (button :class "minute" :tooltip "${time-hour}:${time-minute}:${time-second}" time-minute)))

(defpoll active-workspace :interval "200ms" :initial "1" `./scripts/active-workspace.sh`)
(defpoll workspaces :interval "200ms" :initial "[1]" `./scripts/workspaces.sh`)
(defpoll active-window :interval "200ms" :initial "" `./scripts/active-window.sh`)

(defpoll bluetooth-info :interval "5s" :initial "" `./scripts/bluetooth-info.sh`)

(defpoll wifi-connected :interval "5s" :initial "down" `./scripts/wifi-connected.sh`)
(defpoll wifi-ssid :interval "5s" `./scripts/wifi-ssid.sh`)

(defpoll power-capacity :interval "5s" :initial "0" `./scripts/power-capacity.sh`)
(defpoll power-status :interval "5s" :initial "" `./scripts/power-status.sh`)

(defpoll dropbox-status :interval "5s" :initial "" `./scripts/dropbox-status.sh`)

(defpoll time-hour :interval "1s" `date '+%H'`)
(defpoll time-minute :interval "1s" `date '+%M'`)
(defpoll time-second :interval "1s" `date '+%S'`)
